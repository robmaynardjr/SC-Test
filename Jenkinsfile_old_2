def podLabel = "jenkins-jenkins-slave "
def image = "jenkins/jnlp-slave"
def registry = "robmaynard"
def repository = "sc-test"
def tag = "latest"
def dockerImage = ""
def registryCredential = 'dockerhub'


node(podLabel) {
  stage('Cloning Git Repo') {
    git "https://github.com/robmaynardjr/SC-Test.git"
  }
  stage('Build Container Image'){
    container('docker') {
      script {
        dockerImage = docker.build((registry + "/" + repository + ":" + tag))
      }
    }
  }
  stage('Stage Container Image'){
    container('docker') {
      script {
        docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
          dockerImage.push()
        }
      }
    }
  }
  stage('Scan image with DSSC'){
    container('docker') {
      withCredentials([
        usernamePassword([
            credentialsId: "dockerhub",
            usernameVariable: "USER",
            passwordVariable: "PASSWORD",
        ])             
    ]){            
        smartcheckScan([
            imageName: "registry.hub.docker.com/robmaynard/sc-test:latest",
            smartcheckHost: "10.0.10.100",
            insecureSkipTLSVerify: true,
            smartcheckCredentialsId: "smart-check-jenkins-user",
            imagePullAuth: {"username":"${USER}","password":"${PASSWORD}"}
          ])
      }
    }
  }
  stage('Deploy'){
    sh 'echo "Deployed to Cluster."'
  }
}





stage("Security Check") {
            steps {
                container('docker') {
                    script {
                        withCredentials([
                            usernamePassword([
                                credentialsId: "dockerhub",
                                usernameVariable: "USER",
                                passwordVariable: "PASSWORD",
                            ]),
                            usernamePassword([
                                credentialsId: "smart-check-jenkins-user",
                                usernameVariable: "SCUSER",
                                passwordVariable: "SCPASSWORD",
                            ])   
                        ]){
                            sh "docker login -u '${USER}' -p '${PASSWORD}'"
                            def imgPAuth = new groovy.json.JsonBuilder([
                                "username":"${USER}",
                                "password":"${PASSWORD}"
                            ]).toString()
                            echo imgPAuth
                            sh "docker run deepsecurity/smartcheck-scan-action --image-name ${imgName} --smartcheck-host='${smartCheckHost}' --smartcheck-user='${SCUSER}' --smartcheck-password='${SCPASSWORD}' --insecure-skip-tls-verify --image-pull-auth={"username":"${USER}","password":"${PASSWORD}"}"
                        }
                    }
                }
            }
        }